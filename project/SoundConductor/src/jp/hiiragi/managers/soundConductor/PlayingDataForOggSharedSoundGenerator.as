package jp.hiiragi.managers.soundConductor
{
	import flash.utils.ByteArray;

//--------------------------------------
//  Events
//--------------------------------------

//--------------------------------------
//  Styles
//--------------------------------------

//--------------------------------------
//  Other metadata
//--------------------------------------
	
	internal class PlayingDataForOggSharedSoundGenerator extends AbstractPlayingOggDataForSoundGenerator
	{
//--------------------------------------------------------------------------
//
//  Class constants
//
//--------------------------------------------------------------------------
		
//--------------------------------------------------------------------------
//
//  Class variables
//
//--------------------------------------------------------------------------
		//----------------------------------
		//  valiableName
		//----------------------------------
		
//--------------------------------------------------------------------------
//
//  Class properties
//
//--------------------------------------------------------------------------
		//----------------------------------
		//  propertyName
		//----------------------------------
		
//--------------------------------------------------------------------------
//
//  Class Service methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Class Namespace methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Class Public methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Class Internal methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Class Protected methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Class Private methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Class Event handlers
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Constructor
//
//--------------------------------------------------------------------------
		public function PlayingDataForOggSharedSoundGenerator(playInfo:SoundPlayInfo, registeredSoundData:RegisteredSoundData, soundGroupController:SoundGroupController, sharedSoundGeneratorEngine:SoundGeneratorEngine)
		{
			_sharedSoundGeneratorEngine = sharedSoundGeneratorEngine;
			super(playInfo, registeredSoundData, soundGroupController);
		}
		
//--------------------------------------------------------------------------
//
//  Variables
//
//--------------------------------------------------------------------------
		//----------------------------------
		//  valiableName
		//----------------------------------
		private var _sharedSoundGeneratorEngine:SoundGeneratorEngine;
		
//--------------------------------------------------------------------------
//
//  Overridden properties
//
//--------------------------------------------------------------------------
		//----------------------------------
		//  propertyName
		//----------------------------------
		
//--------------------------------------------------------------------------
//
//  Properties
//
//--------------------------------------------------------------------------
		//----------------------------------
		//  propertyName
		//----------------------------------
		
//--------------------------------------------------------------------------
//
//  Overridden methods
//
//--------------------------------------------------------------------------

		override protected function play_internal():void
		{
			setVolumeController(new SoundParameterControllerForSoundGenerator(SoundParameterType.VOLUME, initVolume));
			setPanController(new SoundParameterControllerForSoundGenerator(SoundParameterType.PAN, initPan));
			_sharedSoundGeneratorEngine.addPlayingData(this);
		}
		
		override protected function writeSoundByteArrayFinished(byteArray:ByteArray):ByteArray
		{
			var len:int = byteArray.length;
			var editedByteArray:ByteArray = new ByteArray();
			
			while (byteArray.bytesAvailable)
			{
				var volumeMultipleValue:Number = masterVolumeController.value;
				volumeMultipleValue *= volumeController.value;
				if (soundGroupController != null)
				{
					volumeMultipleValue *= soundGroupController.groupVolumeController.value;
				}
				
				var pan:Number = panController.value;
				var leftMultipleValue:Number = ((pan < 0) ? 1 : 1 - pan) * volumeMultipleValue;
				var rightMultipleValue:Number = ((pan > 0) ? 1 : pan + 1) * volumeMultipleValue;
				
				editedByteArray.writeFloat(byteArray.readFloat() * leftMultipleValue);
				editedByteArray.writeFloat(byteArray.readFloat() * rightMultipleValue);
			}
			
			
			// ポジションを最初に戻す
			editedByteArray.position = 0;
			
			return editedByteArray;
		}
		
//--------------------------------------------------------------------------
//
//  Service methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Namespace methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Public methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Internal methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Protected methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Private methods
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Overridden Event handlers
//
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//
//  Event handlers
//
//--------------------------------------------------------------------------
		
	}
}



////////////////////////////////////////////////////////////////////////////////
//
//  Helper class: ClassName
//
////////////////////////////////////////////////////////////////////////////////