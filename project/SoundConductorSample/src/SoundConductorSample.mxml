<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   creationComplete="application1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.components.Alert;
			
			import jp.hiiragi.managers.soundConductor.SoundConductor;
			import jp.hiiragi.managers.soundConductor.SoundId;
			import jp.hiiragi.managers.soundConductor.SoundPlayInfo;
			
			[Embed(source="Battle-forHonor.mp3", mimeType="audio/mpeg")]
			private static const BGM_01:Class;
			
			[Embed(source="Battle-forHonor_loop.ogg", mimeType="application/octet-stream")]
			private static const BGM_02:Class;
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				SoundConductor.initialize(true);
				
				var bgmSound:Sound = new BGM_01();
				var normalSoundId:SoundId = SoundConductor.registerSound(bgmSound, true);
				var normalPlayInfo:SoundPlayInfo = new SoundPlayInfo(normalSoundId);
				normalPlayInfo.startTimeByMS = 0;
				normalPlayInfo.loopStartTimeByMS = 3278;
				normalPlayInfo.loopEndTimeByMS = 51258;
				
				var oggSound:ByteArray = new BGM_02();
				var oggSoundId:SoundId = SoundConductor.registerOggBinary(oggSound, true);
				var oggPlayInfo:SoundPlayInfo = new SoundPlayInfo(oggSoundId);
				oggPlayInfo.startTimeByMS = 0;
				oggPlayInfo.loopStartTimeByMS = 3278;
				oggPlayInfo.loopEndTimeByMS = 51258;
				
				
				var console:SoundConsole = new MP3SoundConsole();
				addElement(console);
				console.playInfo = normalPlayInfo;
				
				
				console = new OggSoundConsole();
				addElement(console);
				console.playInfo = oggPlayInfo;
				
				
				
				
				systemManager.loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, onUncaughtErrorHandler);
			}
			

			
			protected function linkbutton1_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest('http://wingless-seraph.net/'), "_blank");
			}
			
			protected function onUncaughtErrorHandler(event:UncaughtErrorEvent):void
			{
				var message:String;
				
				if (event.error is Error)
				{
					message = Error(event.error).message;
				}
				else if (event.error is ErrorEvent)
				{
					message = ErrorEvent(event.error).text;
				}
				else
				{
					message = event.error.toString();
				}
				
				Alert.show(message);
			}
			
			protected function masterVolumeSlider_changeHandler(event:Event):void
			{
				SoundConductor.setMasterVolume(masterVolumeSlider.value);
			}
			
			protected function checkbox1_changeHandler(event:Event):void
			{
				if (muteCheckBox.selected)
					SoundConductor.muteAll();
				else
					SoundConductor.unmuteAll();
			}
			
			protected function linkbutton2_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest('https://github.com/Hiiragi/SoundConductor'), "_blank");
			}

			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout gap="5" />
	</s:layout>
	
	<s:Panel width="100%" height="130" title="Master">
		<s:layout>
			<s:VerticalLayout gap="5" />
		</s:layout>
		
		<s:HGroup padding="10" verticalAlign="middle">
			<s:Label text="master volume" />
			<s:HSlider id="masterVolumeSlider" minimum="0" maximum="1" stepSize="0.01" value="1"
					   width="200" change="masterVolumeSlider_changeHandler(event)" />
			<s:CheckBox id="muteCheckBox" label="mute" change="checkbox1_changeHandler(event)" />
		</s:HGroup>
		
		<mx:LinkButton label="Music : Battle for Honor (composed by ユーフルカ)" click="linkbutton1_clickHandler(event)" color="0x3333FF" />
		<mx:LinkButton label="SoundConductor's demo" click="linkbutton2_clickHandler(event)" color="0x3333FF" />
	</s:Panel>
	

	
	
</s:Application>
